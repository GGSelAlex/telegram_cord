import telebot
import os
from flask import Flask, request

# === 1. –¢–æ–∫–µ–Ω —Ç–∞ —Å–ø–∏—Å–æ–∫ –∞–¥–º—ñ–Ω—ñ–≤ ===
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_IDS = [8411342070, 8208162262]  # <- –≤—Å—Ç–∞–≤ —Å–≤–æ—ó Telegram ID

bot = telebot.TeleBot(TOKEN)

# === 2. Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Webhook ===
app = Flask(__name__)

@app.route('/' + TOKEN, methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200

@app.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url=f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}")
    return "Bot is running via webhook", 200

# === 3. –§—É–Ω–∫—Ü—ñ—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ ===
def notify_admins(message_text):
    for admin_id in ADMIN_IDS:
        bot.send_message(admin_id, message_text)

# === 4. /start ===
@bot.message_handler(commands=['start'])
def start(message):
    user_name = message.from_user.full_name
    user_id = message.from_user.id

    # –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—Å—ñ–º –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    notify_admins(f"üöÄ –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω—É–≤ /start:\n–Ü–º'—è: {user_name}\nTelegram ID: {user_id}")

    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("‚öñÔ∏è –ü–æ—Å–ª—É–≥–∏", "üïí –ó–∞–ø–∏—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é")
    markup.row("‚ÑπÔ∏è –ü—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é", "üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è")

    welcome_text = (
        "üíº *–Æ—Ä–∏–¥–∏—á–Ω—ñ –ø–æ—Å–ª—É–≥–∏ Kovalova Stanislava*\n\n"
        "–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É –ø—Ä–µ–º—ñ—É–º —é—Ä–∏–¥–∏—á–Ω–æ–º—É —Å–µ—Ä–≤—ñ—Å—ñ.\n"
        "–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª –Ω–∏–∂—á–µ üëá"
    )
    bot.send_message(message.chat.id, welcome_text, parse_mode="Markdown", reply_markup=markup)

# === 5. –ü–æ—Å–ª—É–≥–∏ ===
@bot.message_handler(func=lambda m: m.text == "‚öñÔ∏è –ü–æ—Å–ª—É–≥–∏")
def services(message):
    bot.send_message(
        message.chat.id,
        "–ú–∏ –Ω–∞–¥–∞—î–º–æ:\n"
        "üîπ –í–∏—ó–∑–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω\n"
        "üîπ –í—ñ–¥—Ç–µ—Ä–º—ñ–Ω—É–≤–∞–Ω–Ω—è –º–æ–±—ñ–ª—ñ–∑–∞—Ü—ñ—ó\n"
        "üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω–≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ\n"
        "üîπ –ó–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –∑—ñ —Å–ª—É–∂–±–∏ –≤ –ó–°–£\n\n"
        "–î–ª—è –∑–∞–ø–∏—Å—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ—é 'üïí –ó–∞–ø–∏—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é'."
    )

# === 6. –ó–∞–ø–∏—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é ===
@bot.message_handler(func=lambda m: m.text == "üïí –ó–∞–ø–∏—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é")
def consult(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    contact_btn = telebot.types.KeyboardButton("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
    write_btn = telebot.types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É")
    markup.add(contact_btn, write_btn)
    bot.send_message(
        message.chat.id,
        "üìû –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å '–ù–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É', —è–∫—â–æ –Ω–µ —Ö–æ—á–µ—Ç–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä:",
        reply_markup=markup
    )

# === 7. –û–±—Ä–æ–±–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç—É ===
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    contact = message.contact.phone_number
    user_name = message.from_user.full_name
    user_id = message.from_user.id

    bot.send_message(
        message.chat.id,
        f"–î—è–∫—É—î–º–æ! –í–∞—à –Ω–æ–º–µ—Ä {contact} –æ—Ç—Ä–∏–º–∞–Ω–æ.\n"
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –æ–¥—Ä–∞–∑—É –Ω–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É üëá",
        reply_markup=contact_markup()
    )

    notify_admins(f"üìû –ù–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:\n–Ü–º'—è: {user_name}\nTelegram ID: {user_id}\n–¢–µ–ª–µ—Ñ–æ–Ω: {contact}")

# === 8. –ö–Ω–æ–ø–∫–∞ "–ù–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É" ===
@bot.message_handler(func=lambda m: m.text == "–ù–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É" or m.text == "üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è")
def write_lawyer(message):
    bot.send_message(
        message.chat.id,
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å, —â–æ–± –æ–¥—Ä–∞–∑—É –Ω–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É:\nüëâ [–ù–∞–ø–∏—Å–∞—Ç–∏ –ö–æ–≤–∞–ª–æ–≤—É](https://t.me/uristcord)",
        parse_mode="Markdown",
        reply_markup=None
    )

# === 9. –ü—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é ===
@bot.message_handler(func=lambda m: m.text == "‚ÑπÔ∏è –ü—Ä–æ –∫–æ–º–ø–∞–Ω—ñ—é")
def about(message):
    bot.send_message(
        message.chat.id,
        "–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑ 2022 —Ä–æ–∫—É –∑–∞—Ä–∞–¥–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Ç–∞ –∑–∞—Ö–∏—Å—Ç—É —á–æ–ª–æ–≤—ñ–∫—ñ–≤.\n"
        "Kovalova Legal ‚Äî –ø—Ä–µ–º—ñ–∞–ª—å–Ω–∏–π —Å–µ—Ä–≤—ñ—Å, —è–∫–∏–π –∑–∞–±–µ–∑–ø–µ—á—É—î —é—Ä–∏–¥–∏—á–Ω—É "
        "–¥–æ–ø–æ–º–æ–≥—É —É –ø–∏—Ç–∞–Ω–Ω—è—Ö –≤—ñ–π—Å—å–∫–æ–≤–æ—ó —Å–ª—É–∂–±–∏, —Å–æ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –∑–∞—Ö–∏—Å—Ç—É —Ç–∞ –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç—ñ."
    )

# === 10. Inline –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É –∑ —é—Ä–∏—Å—Ç–æ–º ===
def contact_markup():
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç–∏ —é—Ä–∏—Å—Ç—É", url="https://t.me/uristcord"))
    return markup

# === 11. –ó–∞–ø—É—Å–∫ Flask ===
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
